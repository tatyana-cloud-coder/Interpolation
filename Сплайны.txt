using System;
using System.Collections.Generic;
namespace Interpolation
{
    class Program
    {
       
     static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());
            List<double> XList = new List<double>();
            List<double> YList = new List<double>();
            for (int i = 0;i<=n; i++)
            {
                XList.Add(i);
                YList.Add(i *i);
                
            }
            Console.Write("x(k): ");
            foreach (double item in XList)
            {
                Console.Write("{0} ", item);
            }
            Console.WriteLine();
            Console.WriteLine();
            Console.Write("y(k): ");
            foreach (double item in YList)
            {
                Console.Write("{0} ", item);
            }
            Console.WriteLine();
            double[,] matrix = new double[n * 4, n * 4];
            double[] results = new double[n * 4];
         
            Console.WriteLine("СЛАУ:");

          
            for (int i = 0; i < matrix.GetLength(0);i++)
            {
                for (int j = 0;j < matrix.GetLength(1);j++)
                {
                    matrix[i, j] = 0;
                }
                results[i] = 0;
            }
            //2
            int k = 0;
            for (int j = 0; j< matrix.GetLength(1); j+=4)
            {
                matrix[k, j] = 1;
                results[k] = YList[k];
                k++;
                

            }
            //3
            int c = 0;
            double h;
            int res = 1; 
            for (int j = 0; j < matrix.GetLength(1); j +=4)
            {
                h = XList[c + 1] - XList[c];
                matrix[k, j] = 1;
                matrix[k, j+1] = h;
                matrix[k, j + 2] = h * h;
                matrix[k, j + 3] = h * h * h;
                results[k] = YList[res];
                res++;
                k++;
                c++;

            }
            //6
            c = 0;
            for (int j =1; j+4<matrix.GetLength(1); j+=4)
            {
                h = XList[c + 1] - XList[c];
                matrix[k, j] = 1;
                matrix[k, j + 1] = 2 * h;
                matrix[k, j + 2] = 3 * h * h;
                matrix[k, j + 4] = -1;
                c++;
                k++;
            }
            //7
            c = 0;
            for (int j = 2; j + 4 < matrix.GetLength(1); j += 4)
            {
                h = XList[c + 1] - XList[c];
                matrix[k, j] = 2;
                matrix[k, j + 1] = 6 * h;
                matrix[k, j + 4] = -2;
                c++;
                k++;
            }
            //10
            matrix[k, 2] = 2;
            k++;
            //11
            h = XList[n] - XList[n-1];
            matrix[k, matrix.GetLength(1) - 2] = 2;
            matrix[k, matrix.GetLength(1) - 1] = 6*h;
            for (int i = 0; i < matrix.GetLength(0); i++)
            {
                for (int j = 0; j < matrix.GetLength(1); j++)
                {
                    Console.Write("{0} ", matrix[i, j]);
                }
                Console.Write("| {0}", results[i]);
                Console.WriteLine();
            }
            Console.ReadLine();
        }
    }
 }